#ifndef _APP_PROTOCOL_YDT1363_H_
#define _APP_PROTOCOL_YDT1363_H_

#include "app_uart_rcv.h"





typedef enum{
	YDT_IDX_HEAD = 0,
	YDT_IDX_VER,
	YDT_IDX_ADDR,
	YDT_IDX_CID1,
	YDT_IDX_CID2,
	YDT_IDX_LEN_H,
	YDT_IDX_LEN_L,
	YDT_IDX_DATA,
	YDT_IDX_MAX
}EN_YDT_IDX;

typedef enum{
	YDT_RTN = 0,
	YDT_MAX,
}EN_YDT_TYPE;

typedef enum{
	CID1_RTN = 0x42,
}EN_CID1;

typedef enum{
	CID2_RCV_GET_TIME = 0x4d,		//获取设备时间
	CID2_RCV_SET_TIME,				//设置设备时间
	CID2_RCV_GET_VERSION,			//获取协议版本
	CID2_RCV_GET_ADDR,				//获取设备地址
	CID2_RCV_SET_ADDR,				//设置设备地址

	CID2_RCV_GET_DATA = 0x80,
	CID2_RCV_GET_WARN,
	CID2_RCV_GET_ALL_CFG,
	CID2_RCV_SET_CFG,
	CID2_RCV_SET_REMOTE,
	CID2_RCV_CLEAR_KEY_CLOSE,
	CID2_RCV_CLEAR_PROTECT,
	CID2_RCV_SET_POWER,

	CID2_RCV_SET_TEST = 0xb0,
	CID2_RCV_GET_TEST,
	CID2_RCV_SET_CALIBRATE_RELAY,
	CID2_RCV_SET_CALIBRATE_DATA,
	CID2_RCV_GET_CALIBRATE_STATE,
	CID2_RCV_GET_CALIBRATE_DATA,

	CID2_RCV_CLEAR_ALL = 0xc0,		//清除所有
	CID2_RCV_CLEAR_SYS_CFG,
	CID2_RCV_CLEAR_SYS_PWR,

	CID2_RCV_CALIBRATE_GET_STATUS = 0xf0,
	CID2_RCV_CALIBRATE_ZERO,
	CID2_RCV_CALIBRATE_U,
	CID2_RCV_CALIBRATE_I_AND_P,
	CID2_RCV_CALIBRATE_P_OFFSET,
	CID2_RCV_GET_ANALOG,
	CID2_RCV_CLEAR_ENERGY,
	CID2_RCV_CALIBRATE_ZERO1,
	CID2_RCV_CALIBRATE_U1,
	CID2_RCV_CALIBRATE_I_AND_P1,
	CID2_RCV_CALIBRATE_P_OFFSET1,
	CID2_RCV_CLEAR_ENERGY1,
}EN_CID2_RCV;

typedef enum{
	CID2_RTN_OK = 0,
	CID2_RTN_VER_ERROR,
	CID2_RTN_CHECKSUM_ERROR,
	CID2_RTN_LEN_CHECKSUM_ERROR,
	CID2_RTN_CID2_ERROR,
	CID2_RTN_CMD_ERROR,
	CID2_RTN_DATA_ERROR,
	CID2_RTN_NO_HIS_DATA_ERROR,		//无历史数据或历史告警
	CID2_RTN_CID1_ERROR,
	CID2_RTN_LEN_ERROR,
	CID2_RTN_ADDR_ERROR,
	CID2_RTN_UPGRADE_ERROR,
	CID2_RTN_OTHER = 0x30,
}EN_CID2_RTN;

typedef union{
	EN_CID2_RTN CID2_RTN;
	EN_CID2_RCV CID2_RCV;
}UN_CID2;

typedef struct{
	u8 Ver;
	u8 Addr;
	EN_YDT_TYPE Type;
	UN_CID2 CID2;
}ST_YDT_CFG;

typedef struct{
	ST_YDT_CFG YDT_Cfg;
	ST_DATA Data;
}ST_YDT_INFO;


void Pack_Protocol_YDT(EN_DEV_UART DevUart, ST_YDT_INFO ydt_Info);
bool If_Protocol_YDT(void);
void Check_Protocol_YDT(void);

#endif

